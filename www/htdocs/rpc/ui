#!/usr/bin/perl -WT
#
#   WakeUpManager suite
#
#   Copyright (C) 2008-2009 Maximilian Wilhelm <max@rfc2324.org>
#
#   This program is free software; you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation; either version 2 of the License, or
#   (at your option) any later version.
#
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License along
#   with this program; if not, write to the Free Software Foundation, Inc.,
#   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
#
# Maximilian Wilhelm <max@rfc2324.org>
#  --  Fri, 06 Jun 2008 16:27:22 +0200
#

use strict;
use CGI;

my $cgi = CGI->new ();

use WakeUpManager::Cmd::BootHost;
use WakeUpManager::RPC::Wrapper;
use WakeUpManager::WWW;

use Frontier::Responder;

#
# Error handling via 'die' to generate code 500 (Internal Server Error)
sub error ($) {
	my $msg = shift;

	chomp $msg;

	print "Content-Type: text/plain\n\n";
	print "$msg\n";
	die "$msg\n";
	exit 0;
}

my $www = WakeUpManager::WWW->new (contentless_mode => 1, no_header => 1);
if (! $www) {
	error "Content-Type: text/plain\n\nAn internal error occured. Please contact your system administrator.\n";
}

my $params = $www->{params};

# To have a trustful user name, we have to get it here an preset it for WakeUpManager::Cmd::BootHost
my $user = $params->get_user ();

my $boot_host_cmd = WakeUpManager::Cmd::BootHost->new (preset_uid => $user);
if (! $boot_host_cmd) {
	error "Content-Type: text/plain\n\nAn internal error occured. Please contact your system administrator.\n";
}

my $rpc_wrapper_boot_host = WakeUpManager::RPC::Wrapper->new (wrapper_obj => $boot_host_cmd);
if (! $rpc_wrapper_boot_host) {
	error "Content-Type: text/plain\n\nAn internal error occured. Please contact your system administrator.\n";
}
# Who does want what?
my $request_method = $params->get_env_var ('REQUEST_METHOD');
my $remote_addr = $params->get_env_var ('REMOTE_ADDR');


# Fire up RPC2 serving stuff
my $rpc2 = Frontier::RPC2->new ();
if (! $rpc2) {
	error "Content-Type: text/plain\n\nAn internal error occured. Please contact your system administrator.\n";
}

# Only accept POST request
if (! defined $request_method || $request_method ne 'POST') {
	error "Refusing to serve a request using invalid method.";
}

# Check for valid content lenght in HTTP request.
my $content_length = $params->get_env_var ('CONTENT_LENGTH');
my $query = $www->_get_POST_data ();
if (length ($query) != $content_length) {
	error "Content length does not fit lenght of request...";
}

# Ok, if we're still alive, serve request
print "Content-Type: text/xml\n\n";
print $rpc2->serve ($query, $rpc_wrapper_boot_host->get_methods ());
