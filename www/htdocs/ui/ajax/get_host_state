#!/usr/bin/perl -WT
#
# Maximilian Wilhelm <max@rfc2324.org>
#  --  Fri May 30 05:05:32 2008
#

use strict;

use WakeUpManager::Config;
use WakeUpManager::DB::HostDB;
use WakeUpManager::WWW;


#
# WWW lib
my $www = WakeUpManager::WWW->new (contentless_mode => 1);
if (! $www) {
	print "Content-Type: text/html\n\nAn internal error has occured. Please contact the system administrator.\n";
	exit 0;
}

my $params = $www->{params};

#
# DB connection
my $wum_config = WakeUpManager::Config->new (config_file => "/etc/wum/wum.conf");
my $host_db = WakeUpManager::DB::HostDB->new (dbi_param => $wum_config->get_dbi_param ("HostDB"));
if (! $host_db) {
        print "<span class=\"error\">Error: No database connection.</span>\n";
	print STDERR "Error: No database connection.\n";
}
# Get host_id
my $host_id = $params->get_http_param ('host_id');
if (! $host_id) {
	print "<span class=\"error\">Error: No host_id given.</span>\n";
	print STDERR "Called without 'host_id'.\n";
	exit 1;
}

my $user = $params->get_user ();
my $lang = $params->get_lang ();

#
# Validate input
if (! $host_db->is_valid_host ($host_id)) {
	print "<span class=\"error\">Given host_id is not valid.</span>";
	exit 0;
}

my $host_name = $host_db->get_host_name ($host_id);
if (! $host_name) {
	$host_name = "#$host_id";
}

#
# Check if user is allow to show host config
if (! $host_db->user_can_read_host_config ($user, $host_id)) {
	print "<span class=\"error\">Sorry, user \"$user\" is not allowed to view config for host \"$host_name\".</span>";
	exit 0;
}

#
# Query DB for boot times
my $host_state = $host_db->get_host_state ($host_id);
if (ref ($host_state) ne 'HASH') {
	print "<span class=\"error\">Internal error. Please contact your system administrator.</span>";
	exit 0;
}

my $boot_host_name = 'Allow WakeUpManager to boot this host';
my $shutdown_host_name = 'Allow WakeUpManager to shutdown this host';
if ($lang eq 'de') {
	$boot_host_name = 'WakeUpManager erlauben, den Rechner zu starten';
	$shutdown_host_name = 'WakeUpManager erlauben, den Rechner herunterzufahren';

}

my $boot_host_checked = ($host_state->{boot_host}) ? "checked" : "";
my $shutdown_host_checked =  ($host_state->{shutdown_host}) ? "checked" : "";

print "<form name=\"host_state_form2\" method=\"POST\">
 <input type=\"checkbox\" name=\"boot_host\"     value=\"boot_host\" $boot_host_checked> $boot_host_name <br>
 <input type=\"checkbox\" name=\"shutdown_host\" value=\"shutdown_host\" $shutdown_host_checked> $shutdown_host_name <br>\n";

if ($host_db->user_can_write_host_config ($user, $host_id)) {
print " <br>
 <div id=\"host_state_update_result\"><input type=\"button\" value=\"Status speichern\" onclick=\"setHostState();\"></div>\n";
}

print "</form>\n";
