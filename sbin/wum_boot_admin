#!/usr/bin/perl -WT
#
#   WakeUpManager suite
#
#   Copyright (C) 2008-2009 Maximilian Wilhelm <max@rfc2324.org>
#
#   This program is free software; you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation; either version 2 of the License, or
#   (at your option) any later version.
#
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License along
#   with this program; if not, write to the Free Software Foundation, Inc.,
#   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
#
# Boot host or hostgroups unconditionally
#
# Maximilian Wilhelm <max@rfc2324.org>
#  -- Mon, 16 Jun 2008 00:11:43 +0200
#

use strict;

use WakeUpManager::Agent::Connector;
use WakeUpManager::WUM::Config;

use Socket;

my @args = @ARGV;

if (! @args) {
	print STDERR "Usage: $0 host1 [host2 [...]] \@hostgroup1 [...]\n";
	exit 1;
}

my $config = WakeUpManager::WUM::Config->new ();
my $dbi_param = $config->get_dbi_param ('HostDB');

my $host_db = WakeUpManager::DB::HostDB->new (dbi_param => $dbi_param);
if (! $host_db) {
	die "Error: Could not connect to database.\n";
}

my $connector = WakeUpManager::Agent::Connector->new (host_db_h => $host_db);
if (! $connector) {
	die "Error: Could not fire up Agent::Connector.\n";
}

#
# Hash with hosts to be bootet
my $hosts_to_boot = {};

#
# Parse command line arguments (host or hostgroup names)
foreach my $arg (@args) {
	# Is argument a hostgroup name?
	if ($arg =~ m/^@(\w+)$/) {
		my $hg_id = $host_db->get_hostgroup_id ($1);
		if (! $hg_id) {
			print STDERR "Error: Invalid hostgroup \"$1\".\n";
			next;
		}

		my $hosts = $host_db->get_hosts_in_hostgroup ($hg_id);
		if ($hosts) {
			# Push hosts into boot list
			foreach my $item (keys %{$hosts}) {
				$hosts_to_boot->{$item} = $hosts->{$item};
			}
		}
	}

	# No hostgroup name, host name?
	else {
		# Not an FQDN?
		if (! ($arg =~ m/\./)) {
			my ($name, $aliases, $addrtype, $length, @addrs) = gethostbyname ($arg);
			if (! $name) {
				print STDERR "Can't autocomplete hostname \"$arg\". Skipping\n";
				next;
			}

			$arg = $name;
		}

		my $host_id = $host_db->get_host_id ($arg);
		if (! $host_id) {
			print STDERR "Error: Invalid host \"$arg\".\n";
			next;
		}

		$hosts_to_boot->{$host_id} = {
		                               id => $host_id,
		                               name => $arg };
	}
}

#
# Boot all the hosts...
foreach my $host_id (keys %{$hosts_to_boot}) {
	my $hostname = $hosts_to_boot->{$host_id}->{name};

	if ($connector->boot_host ($host_id)) {
		print "Booting host \"$hostname\".\n";
	} else {
		print "Booting host \"$hostname\ FAILED!\n";
	}

}
